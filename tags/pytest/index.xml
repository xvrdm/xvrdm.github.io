<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pytest on Invalid Input</title>
    <link>/tags/pytest/</link>
    <description>Recent content in Pytest on Invalid Input</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 03 Jul 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/pytest/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Testing Flask SQLAlchemy database with pytest</title>
      <link>/2017/07/03/testing-flask-sqlalchemy-database-with-pytest/</link>
      <pubDate>Mon, 03 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/07/03/testing-flask-sqlalchemy-database-with-pytest/</guid>
      <description>Introduction Early in the tutorial, the author explains how to set up your app to use unittest and the Flask-Testing extension for its test framework. Since I wanted to use pytest, this was a good opportunity to explore the test setup a bit more in depth.
 Running pytest from a script Firstly, add pytest to your requirements.txt and place a dummy test in the project/tests.
def test_dummy(): assert True Secondly, add a manager.</description>
    </item>
    
  </channel>
</rss>