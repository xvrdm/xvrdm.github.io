<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Purrr on Invalid Input</title>
    <link>/tags/purrr/</link>
    <description>Recent content in Purrr on Invalid Input</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 29 Jan 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/purrr/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>That time I thought I invented pluck</title>
      <link>/2018/01/29/that-time-i-thought-i-invented-pluck/</link>
      <pubDate>Mon, 29 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/01/29/that-time-i-thought-i-invented-pluck/</guid>
      <description>Foreword Just before publishing this article, I read the purrr cheatsheet and realised that what I developed here already exists. Its name is pluck and I definitely suggest that you use it.
 TL;DR This is an attempt to write a R helper function to subset lists that would be as nice as get-in in the functional programming language Clojure. As said above, this is in fact already available in purrr.</description>
    </item>
    
    <item>
      <title>Scraping javascript generated content with splashr</title>
      <link>/2017/07/26/scraping-javascript-generated-content-with-splashr/</link>
      <pubDate>Wed, 26 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/07/26/scraping-javascript-generated-content-with-splashr/</guid>
      <description>Introduction While scraping rental listings, it’s useful to verify that the scripts managed to grab all the offers. This is nice to have on simple fully loaded single page, but even nicer if the rental listings are set up as a infinite scroll page, which seem increasingly popular on real estate websites and require multiple calls from the scraper.
Count of offers on rental websites.
 Even when they don’t load all the results, the websites nearly always indicate the number of matched offers.</description>
    </item>
    
    <item>
      <title>Create Swiss cantons cartogram with ggplot2</title>
      <link>/2017/05/08/create-swiss-cantons-cartogram-with-ggplot2/</link>
      <pubDate>Mon, 08 May 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/05/08/create-swiss-cantons-cartogram-with-ggplot2/</guid>
      <description>Introduction While reading rweekly past issues, I stumbbled upon a post from Max Humber, explaining how he tried to design a tile grid map / state cartogram for Canada. I had never seen such design and thought that it would be a great fit for Swiss cantons. While browsing the excellent repositories of Bob Rudis, I realised that he had written statebin, a ggplot extension to easily create US state cartogram.</description>
    </item>
    
    <item>
      <title>Scrape linked webpages using rvest and purrr</title>
      <link>/2017/04/16/scrape-linked-webpages-using-rvest-and-purrr/</link>
      <pubDate>Sun, 16 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/04/16/scrape-linked-webpages-using-rvest-and-purrr/</guid>
      <description>Introduction The offers on real estate websites aren’t always in an easy-to-use format, especially if you want to compare offers from multiple agencies.
In a previous post, we saw how to scrape a listing of apartments on a single page with R. However, listings usually do not include all the details about the items. They usually only list a condensed version of the information and a url to a “detail” page, which contains the rest of the fields.</description>
    </item>
    
    <item>
      <title>Scrape a list of rental offers using rvest and purrr</title>
      <link>/2017/03/31/scrape-a-list-of-rental-offers-using-rvest-and-purrr/</link>
      <pubDate>Fri, 31 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/03/31/scrape-a-list-of-rental-offers-using-rvest-and-purrr/</guid>
      <description>Introduction The offers on real estate websites aren’t always in an easy-to-use format, especially if you want to compare offers from multiple agencies.
In this post, we will see how to use R to scrape the details about the apartments listed on a single page on a real estate website.
 Scraping the data Getting to know the site We start by looking at the real estate agent website.</description>
    </item>
    
  </channel>
</rss>